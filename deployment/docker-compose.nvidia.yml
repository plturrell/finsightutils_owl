version: '3.8'

services:
  # OWL Converter API
  owl-api:
    build:
      context: ..
      dockerfile: deployment/Dockerfile.nvidia
    image: owl-api:latest
    container_name: owl-api
    ports:
      - "8000:8000"
    environment:
      - BASE_URI=http://finsight.dev/ontology/sap/
      - INFERENCE_LEVEL=standard
      - OUTPUT_DIR=/app/results
      - USE_GPU=true
      - CUDA_VISIBLE_DEVICES=0
    volumes:
      - owl_results:/app/results
    restart: unless-stopped
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              capabilities: [gpu]
              count: 1

  # NVIDIA Triton Inference Server for AI model inference
  triton:
    image: nvcr.io/nvidia/tritonserver:23.10-py3
    container_name: owl-triton
    ports:
      - "8001:8000"
      - "8002:8001"
    environment:
      - LD_LIBRARY_PATH=/opt/tritonserver/lib
    volumes:
      - ../nvidia_triton/model_repository:/models
    command: ["tritonserver", "--model-repository=/models", "--strict-model-config=false", "--log-verbose=1"]
    restart: unless-stopped
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              capabilities: [gpu]
              count: 1

  # Prometheus for monitoring
  prometheus:
    image: prom/prometheus:v2.43.0
    container_name: owl-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus-nvidia.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    restart: unless-stopped

  # Grafana for dashboards
  grafana:
    image: grafana/grafana:9.5.1
    container_name: owl-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    restart: unless-stopped

  # NVIDIA DCGM Exporter for GPU metrics
  dcgm-exporter:
    image: nvcr.io/nvidia/k8s/dcgm-exporter:3.1.7-3.1.4-ubuntu20.04
    container_name: owl-dcgm-exporter
    ports:
      - "9400:9400"
    restart: unless-stopped
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              capabilities: [gpu]
              count: 1

volumes:
  owl_results:
  prometheus_data:
  grafana_data: